datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Admin {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id           String        @id @default(uuid())
  username     String        @unique
  password     String
  name         String
  avatar       String
  levelOnes    LevelOne[]
  levelTwos    LevelTwo[]
  levelThrees  LevelThree[]
  levelFours   LevelFour[]
  transactions Transaction[]
  debits       Debit[]
  credits      Credit[]
  isSuspended  Boolean       @default(false)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model LevelOne {
  id          String     @id @default(uuid())
  nature      Nature
  name        String
  levelTwos   LevelTwo[]
  account     Account    @relation(fields: [accountId], references: [id])
  accountId   String
  isSuspended Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model LevelTwo {
  id          String       @id @default(uuid())
  name        String
  levelOne    LevelOne     @relation(fields: [levelOneId], references: [id])
  levelOneId  String
  levelThrees LevelThree[]
  account     Account      @relation(fields: [accountId], references: [id])
  accountId   String
  isSuspended Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model LevelThree {
  id          String      @id @default(uuid())
  name        String
  levelTwo    LevelTwo    @relation(fields: [levelTwoId], references: [id])
  levelTwoId  String
  levelFours  LevelFour[]
  account     Account     @relation(fields: [accountId], references: [id])
  accountId   String
  isSuspended Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model LevelFour {
  id           String     @id @default(uuid())
  name         String
  levelThree   LevelThree @relation(fields: [levelThreeId], references: [id])
  levelThreeId String
  debits       Debit[]
  credits      Credit[]
  account      Account    @relation(fields: [accountId], references: [id])
  accountId    String
  isSuspended  Boolean    @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

enum Nature {
  ASSET
  EXPENSE
  LIABILITY
  EQUITY
  REVENUE
}

model Debit {
  id            String      @id @default(uuid())
  headId        String
  head          LevelFour   @relation(fields: [headId], references: [id])
  amount        Float
  description   String
  transactionId String
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  accountId     String
  account       Account     @relation(fields: [accountId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Credit {
  id            String      @id @default(uuid())
  headId        String
  head          LevelFour   @relation(fields: [headId], references: [id])
  amount        Float
  description   String
  transactionId String
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  accountId     String
  account       Account     @relation(fields: [accountId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Transaction {
  id          String   @id @default(uuid())
  debits      Debit[]
  credits     Credit[]
  accountId   String
  account     Account  @relation(fields: [accountId], references: [id])
  isSuspended Boolean  @default(false)
  logs        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
